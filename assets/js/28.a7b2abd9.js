(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{464:function(t,s,a){"use strict";a.r(s);var n=a(16),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器原理-v8引擎-js执行原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器原理-v8引擎-js执行原理"}},[t._v("#")]),t._v(" 浏览器原理-v8引擎-js执行原理")]),t._v(" "),a("h2",{attrs:{id:"浏览器内核"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核"}},[t._v("#")]),t._v(" 浏览器内核")]),t._v(" "),a("p",[a("strong",[t._v("别称：")])]),t._v(" "),a("ul",[a("li",[t._v("排版引擎(layout engine)")]),t._v(" "),a("li",[t._v("浏览器引擎(brower engine)")]),t._v(" "),a("li",[t._v("页面渲染引擎(rendering engine)")])]),t._v(" "),a("p",[t._v("不同的浏览器有不同的内核，简单介绍两种（现有内核数量当然不止两种）")]),t._v(" "),a("ul",[a("li",[t._v("Webkit：是苹果基于KHTML开发、开源的，用于Safari；")]),t._v(" "),a("li",[t._v("Blink：是Webkit的一个分支，Google开发，目前应用于Google Chrome、Edge、Opera等；")])]),t._v(" "),a("p",[t._v("​\t"),a("strong",[t._v("浏览器内核包含js引擎")])]),t._v(" "),a("p",[t._v("js引擎也有多种，最常用也是这里介绍的便是v8引擎。")]),t._v(" "),a("h2",{attrs:{id:"高级语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高级语言"}},[t._v("#")]),t._v(" 高级语言")]),t._v(" "),a("p",[t._v("JavaScript是一门高级语言，高级语言同时也分为编译型语言和解释型语言，JavaScript属于解释型语言。")]),t._v(" "),a("p",[t._v("高级语言无法被机器直接执行，因为机器并不认识高级语言，那么高级语言是如何在机器上运行的呢？这其中便有一个转换过程。")]),t._v(" "),a("div",{staticClass:"language-flow line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-flow"}},[a("code",[t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("operation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 机器语言\nb"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("operation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 汇编语言\nc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("operation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 高级语言\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("c\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("div",{staticClass:"language-sequence line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("机器语言->高级语言:越来越接近人类的思维\n高级语言--\x3e机器语言:越来越接近机器的思维\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("如下图所示，这是在浏览器中，代码的执行过程")]),t._v(" "),a("div",{staticClass:"language-mermaid line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("graph LR\nA[静态资源] --\x3e B(index.html)\n\tB --\x3e C(遇到link标签)\n\tB --\x3e D(遇到script标签)\n\t\tC --\x3e E(下载xxx.css)\n\t\tD --\x3e F(下载xxx.js)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("在这个过程中，如果HTML解析的时候遇到了JavaScript标签，会停止解析HTML，而去加载和执行JavaScript代码")]),t._v(" "),a("ul",[a("li",[t._v("因为JavaScript代码可以操作DOM，所以浏览器希望将HTML解析的DOM和JavaScript操作之后的DOM放到一起来生成最终的DOM树，而不是频繁地去生成新的DOM tree.")])]),t._v(" "),a("div",{staticClass:"language-mermaid line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("graph TB;\nA(HTML)--\x3eB(HTML Parser)\nB--\x3eC(DOM Tree)\nC--\x3eD(Attachment)\nDOM--\x3eC\n\nE(Style Sheets)--\x3eF(CSS Parser)\nF--\x3eG(Style Rules)\nG--\x3eD\n\nD--\x3eH(Render Tree)\nH--\x3eI(Painting)\nI--\x3eJ(Display)\nlayout--\x3eH\nH--\x3elayout\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("h2",{attrs:{id:"javascript引擎-js引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript引擎-js引擎"}},[t._v("#")]),t._v(" JavaScript引擎(JS引擎)")]),t._v(" "),a("p",[t._v("JavaScript作为一门高级语言，能在机器上执行正是借助了JS引擎。")]),t._v(" "),a("p",[t._v("事实上，我们编写的JavaScript最终都是由机器的CPU执行的，")]),t._v(" "),a("p",[t._v("但是只有机器语言才能被CPU所执行，")]),t._v(" "),a("p",[t._v("而JS引擎便能将我们编写的JavaScript代码编译成机器语言(CPU指令)让CPU执行。")]),t._v(" "),a("p",[t._v("不止是编译，JavaScript引擎的工作包括了"),a("strong",[t._v("编译、执行代码，分配内存和垃圾回收")]),t._v("。")]),t._v(" "),a("p",[t._v("比较常见的JavaScript引擎：")]),t._v(" "),a("ul",[a("li",[t._v("JavaScriptCore：WebKit中的JavaScript引擎，苹果公司开发；")]),t._v(" "),a("li",[t._v("V8：Google开发的超强JavaScript引擎，使Chrome在众多浏览器中脱颖而出")])]),t._v(" "),a("p",[a("strong",[t._v("浏览器内核和JS引擎的关系：")])]),t._v(" "),a("p",[t._v("浏览器的内核是指支持浏览器运行的最核心的程序，分为两个部分，一个是渲染引擎，另一个是JS引擎;")]),t._v(" "),a("p",[t._v("这里我们以WebKit为例，WebKit事实上由两部分组成：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("WebCore:")]),t._v(" 负责HTML解析、布局、渲染等等相关的工作，")]),t._v(" "),a("li",[a("strong",[t._v("JavaScriptCore:")]),t._v(" 解析、执行JavaScript代码;")])]),t._v(" "),a("h2",{attrs:{id:"v8引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v8引擎"}},[t._v("#")]),t._v(" V8引擎")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("V8是用C++编写的Google开源高性能JavaScript和WebAssembly引擎，它用于Chrome和Node.js等。")]),t._v(" "),a("li",[t._v("V8可以独立运行，也可以嵌入到任何C++应用程序中。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static01.imgkr.com/temp/a00f2d96fb084be3bd1a7062d2ce5224.png",alt:"JavaScript_meta"}})]),t._v(" "),a("p",[t._v("接下来对上图进行简单的解释")]),t._v(" "),a("p",[a("strong",[t._v("Parse")]),t._v(" 模块会将JavaScript代码转换成AST(抽象语法树),这是因为解释器"),a("strong",[t._v("Ignition")]),t._v(" 并不认识JavaScript代码;")]),t._v(" "),a("ul",[a("li",[t._v("如果函数没有被调用，那么是不会被转换成AST的；")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://v8.dev/blog/scanner",target:"_blank",rel:"noopener noreferrer"}},[t._v("Parse的V8官方文档"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("AST")]),t._v(" (抽象语法树)用于描述程序的结构;")]),t._v(" "),a("p",[a("strong",[t._v("Ignition")]),t._v(" 是一个解释器，会将AST转换成byteCode字节码")]),t._v(" "),a("ul",[a("li",[t._v("同时会收集 "),a("strong",[t._v("TurboFan")]),t._v(" 优化所需要的信息(比如函数参数的类型信息，有了类型才能进行真实的运算)")]),t._v(" "),a("li",[t._v("如果函数只调用一次，"),a("strong",[t._v("Ignition")]),t._v(" 会直接执行将其解释为byteCode")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://v8.dev/blog/ignition-interpreter",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ignition的v8官方文档"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("TurboFan")]),t._v(" 是一个编译器，可以将字节码编译为CPU可以直接执行的机器码;")]),t._v(" "),a("ul",[a("li",[t._v("如果一个函数被多次调用,那么就会被标记为 "),a("strong",[t._v("热点函数")]),t._v(" ,然后被TurboFan转换成"),a("strong",[t._v("优化的机器码")]),t._v(",提高代码的执行性能;")]),t._v(" "),a("li",[t._v("但是，机器码实际上也会被还原为byteCode，这是因为如果后续执行函数的过程中，类型发生了变化(比如sum函数原来执行的是number类型，后来执行的变成了string类型),所以之前优化的机器码并不能正确的处理运算，就会逆向的转换成字节码;")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://v8.dev/blog/turbofan-jit",target:"_blank",rel:"noopener noreferrer"}},[t._v("TurboFan的V8官方文档"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("V8引擎的解析图(官网例图)")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://v8.dev/_img/scanner/overview.svg",alt:"V8"}})]),t._v(" "),a("p",[t._v("如上图所示，当V8拿到JavaScript代码后的流程如下")]),t._v(" "),a("ul",[a("li",[t._v("Blink(浏览器内核)将源码交给V8引擎，Stream获取到源码并进行编码转换；")]),t._v(" "),a("li",[t._v("Scanner会进行词法分析(lexical analysis),词法分析会将代码转换成tokens;")]),t._v(" "),a("li",[t._v("tokens会被Parser(解析器)转换处理成为AST(抽象语法树),之后再经过Ignition解释器转换为byteCode字节码;")]),t._v(" "),a("li",[t._v("tokens会分别经过 "),a("strong",[t._v("Parser")]),t._v(" 和 "),a("strong",[t._v("PreParser")]),t._v(",这是因为解析器在解析代码时需要时间，所以JavaScript引擎都会尽可能避免完全解析源代码，"),a("strong",[t._v("Lazy Parsing")]),t._v(' (别称：懒解析、惰性解析、延迟解析)便由此诞生了，解析器不必再为每个函数都生成AST,而是可以决定"预解析"(PreParser)或"完全解析"它所遇到的函数;')]),t._v(" "),a("li",[t._v("因为V8实现了Lazy Parsing,所以不会在一开始就解析所有JavaScript代码，将不必要的函数进行 "),a("strong",[t._v("预解析(PreParser)")]),t._v(" ，也就是只解析暂时需要的内容，而对函数的 "),a("strong",[t._v("完全解析(Parser)")]),t._v(" 是在函数被调用时才会执行，提高了网页的运行效率")])]),t._v(" "),a("p",[a("strong",[t._v("PS")]),t._v(" :")]),t._v(" "),a("p",[t._v("​\t为了节省不必要的CPU和内存开销，所有主流浏览器都实现了Lazy Parsing。")]),t._v(" "),a("p",[t._v("​\t预解析会检查源代码的语法并抛出语法错误，但不会解析函数中变量的作用域或生成AST。完全解析则将分析函数体并生成源代码对应的AST数据结构。")]),t._v(" "),a("h2",{attrs:{id:"js执行原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js执行原理"}},[t._v("#")]),t._v(" JS执行原理")]),t._v(" "),a("p",[t._v("JS引擎在执行代码之前，会在堆内存中创建一个全局对象：Global Object(GO)")]),t._v(" "),a("ul",[a("li",[t._v("该对象所有的作用域都可以访问;")]),t._v(" "),a("li",[t._v("对象里面会包含有Date、Array、String、Number、setTimeout、setInterva 等等;")]),t._v(" "),a("li",[t._v("其中还有一个window属性指向该对象自己;")])]),t._v(" "),a("p",[t._v("JS引擎内部有一个 "),a("strong",[t._v("执行上下文栈")]),t._v(" (Execution Context Stack,简称ECS),它是用于执行代码的 "),a("strong",[t._v("调用栈")]),t._v(" 。")]),t._v(" "),a("p",[t._v("什么是 执行上下文栈 ？先上代码")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JavaScript")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n    count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("num2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("首先，JavaScript是单线程语言，代码的执行顺序应该是由上而下层层递进的，那么上面的count变量在声明之前先赋了值，后台应该是报错的，但是它执行成功了~")]),t._v(" "),a("p",[t._v('这种现象就是 "变量提升"。')]),t._v(" "),a("p",[t._v('"变量提升"就是把变量(var)和函数的声明"移动"到代码的最前面,也就是程序会首先执行这些声明，这时候如果变量只是被声明而还没有被赋值，那么程序便会给变量设置默认值 - undefined。')]),t._v(" "),a("p",[t._v('而"变量提升"发生时，上述代码的全局对象Global Object如下：')]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JavaScript")]),t._v("\nglobal_Object "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    sum"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向函数对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("之后当代码执行到"),a("code",[t._v("count=2")]),t._v("和sum函数体时，便会给全局对象中对应的属性进行赋值。")]),t._v(" "),a("p",[t._v("创建执行上下文的三种情况：")]),t._v(" "),a("ul",[a("li",[t._v("全局执行上下文：JS引擎在编译全局代码时，创建全局执行上下文。在当前页面中，全局执行上下文仅有一个。")]),t._v(" "),a("li",[t._v("函数执行上下文：函数在被调用时会创建自己的执行上下文。")]),t._v(" "),a("li",[t._v("eval函数执行上下文：执行eval函数时，也会创建一个执行上下文。")])]),t._v(" "),a("p",[t._v('在执行上下文创建时，var声明的变量会被先赋值为undefined，如果后面有新的赋值才会对undefined进行覆盖，而ES6新增的let/const未被初始赋值undefined，这便是"变量提升"的由来。')]),t._v(" "),a("p",[t._v("执行上下文栈的自我管理：")]),t._v(" "),a("p",[t._v("栈是一种抽象化数据结构，遵循着先进后出、后进先出的基本规则。")]),t._v(" "),a("p",[t._v("还是上代码：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JavaScript")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("one")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"one"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("two")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("two")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"two"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("one")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// one")]),t._v("\n\t\t  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// two")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("上述代码中，执行上下文栈的管理顺序如下")]),t._v(" "),a("ul",[a("li",[t._v("创建全局上下文并压入栈中")]),t._v(" "),a("li",[t._v("调用了one()函数，创建了one()函数的执行上下文并压入栈中")]),t._v(" "),a("li",[t._v("进入one()函数内部，调用了two()函数，创建two()函数的执行上下文并压入栈中")]),t._v(" "),a("li",[t._v("two()函数执行完毕，将two()移出执行上下文栈")]),t._v(" "),a("li",[t._v("one()函数执行完毕，将one()移出执行上下文栈")])]),t._v(" "),a("h2",{attrs:{id:"最后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[t._v("#")]),t._v(" 最后")]),t._v(" "),a("p",[t._v("暂时就先到这里了orz")]),t._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("ul",[a("li",[t._v("注：排名不分先后")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6891471193568706573",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js系列一 - JavaScript运行原理"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/7021714551330570247?share_token=6a9c1f6b-5196-4636-9805-6861f4583d17",target:"_blank",rel:"noopener noreferrer"}},[t._v("V8 是怎么跑起来的 - V8 的 JavaScript 执行管道 2021"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/174675586",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript与浏览器内核的关系"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903433862905864",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript代码是怎么执行的?"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);